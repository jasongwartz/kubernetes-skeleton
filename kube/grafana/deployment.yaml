apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: fg2it/grafana-armhf:v4.6.3
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /
            port: 3000
        env:
        - name: GF_PATHS_CONFIG
          value: /grafana-config/grafana.ini
        - name: GF_SERVER_ROOT_URL
          value: https://grafana.gwartz.me
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana
              key: admin_password
        volumeMounts:
        - name: grafana-config
          mountPath: /grafana-config
      volumes:
      - name: grafana-config
        persistentVolumeClaim:
          claimName: grafana-nfs

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-nfs
spec:
  capacity:
    storage: 50Mi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 10.0.1.5
    path: "/volume1/kubernetes-nfs/grafana"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-nfs
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 50Mi
---
kind: Service
apiVersion: v1
metadata:
  name: grafana
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 80
      targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: grafana
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - host: grafana.gwartz.me
    http:
      paths:
      - backend:
          serviceName: grafana
          servicePort: 80
